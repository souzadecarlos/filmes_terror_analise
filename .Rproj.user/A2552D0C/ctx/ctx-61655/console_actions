{
    "type": [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.2.1 (2022-06-23 ucrt) -- \"Funny-Looking Kid\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from D:/R/Curso-R/TCC - R- Ciencia de Dados I/.RData]\r\n\r\n",
        "> ",
        "gridExtra::grid.arrange(bottom = \"Teste\")",
        "Error in unit(rep(1, nrow), \"null\") : \n  'x' e 'units' devem ter comprimentos > 0\n",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "Error in ggplotGrob(p1) : could not find function \"ggplotGrob\"\n",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "Error in ggplotGrob(p1) : could not find function \"ggplotGrob\"\n",
        "> ",
        "",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(showtext)",
        "> ",
        "font_add_google(\"IM Fell English SC\", \"IM Fell English SC\")",
        "> ",
        "showtext_auto()",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "data_raw <- readxl::read_excel(\"dados/Number Party Massacre V4.0.2.xlsx\", ",
        "+ ",
        "                                sheet = \"Alphabetical\", col_types = c(\"skip\", ",
        "+ ",
        "                                    \"skip\", \"skip\", \"text\", \"skip\", \"numeric\", ",
        "+ ",
        "                                    \"text\", \"text\", \"text\", \"numeric\", ",
        "+ ",
        "                                    \"numeric\", \"text\", \"text\", \"text\", ",
        "+ ",
        "                                    \"text\", \"numeric\", \"text\", \"numeric\", ",
        "+ ",
        "                                    \"numeric\", \"numeric\", \"numeric\", ",
        "+ ",
        "                                    \"numeric\", \"numeric\", \"numeric\", ",
        "+ ",
        "                                    \"numeric\", \"numeric\", \"skip\", \"skip\", ",
        "+ ",
        "                                    \"skip\", \"skip\", \"skip\", \"skip\", \"skip\", ",
        "+ ",
        "                                    \"skip\", \"skip\", \"skip\", \"skip\", \"skip\", ",
        "+ ",
        "                                    \"skip\", \"skip\", \"skip\", \"skip\", \"skip\", ",
        "+ ",
        "                                    \"skip\"))",
        "> ",
        "",
        "> ",
        "data_raw <- data_raw |> ",
        "+ ",
        "  rename(JUMPSCARES = `Jump Scares`) |> ",
        "+ ",
        "  filter(SUBGENRE != \"Documentary\")",
        "> ",
        "",
        "> ",
        "cor_fundo <- \"#eeefd7\"",
        "> ",
        "fonte <- \"IM Fell English SC\"",
        "> ",
        "cor_principal <- \"#73141B\"",
        "> ",
        "cor_fonte <- \"#0A0D09\"",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "gridExtra::grid.arrange(bottom = \"Teste\")",
        "Error in unit(rep(1, nrow), \"null\") : \n  'x' e 'units' devem ter comprimentos > 0\n",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  xlabel(\"Numero de sustos\") +",
        "+ ",
        "  theme(axis.title.y = element_blank())",
        "Error in xlabel(\"Numero de sustos\") : could not find function \"xlabel\"\n",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  xlab(\"Numero de sustos\") +",
        "+ ",
        "  theme(axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  xlab(\"Numero de sustos\") ",
        "> ",
        "p1 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_max(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  theme(axis.title.x = element_blank(),",
        "+ ",
        "        axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  ylab(\"Numero de sustos\") ",
        "> ",
        "  # theme(axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  ylab(\"Numero de sustos\") +",
        "+ ",
        "  theme(axis.title.x = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  ylab(\"Numero de sustos\") +",
        "+ ",
        "  theme(axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "p1 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_max(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  theme(axis.title.x = element_blank(),",
        "+ ",
        "        axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "p2 <- data_raw |> ",
        "+ ",
        "  unite(GENRE, SUBGENRE:SUBGENRE3, sep = \",\") |> ",
        "+ ",
        "  separate_rows(GENRE, sep = \",\") |> ",
        "+ ",
        "  filter(GENRE != \"NA\") |> ",
        "+ ",
        "  group_by(GENRE) |> ",
        "+ ",
        "  summarise(num_filmes = n(), num_sustos = mean(JUMPSCARES, na.rm = TRUE)) |> ",
        "+ ",
        "  filter(num_filmes > 10) |> ",
        "+ ",
        "  slice_min(num_sustos, n = 5) |> ",
        "+ ",
        "  mutate(GENRE = forcats::fct_reorder(GENRE, num_sustos)) |> ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = GENRE, y = num_sustos) +",
        "+ ",
        "  geom_bar(stat = \"Identity\") +",
        "+ ",
        "  scale_y_continuous(limits = c(0, 15)) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  ylab(\"Numero de sustos\") +",
        "+ ",
        "  theme(axis.title.y = element_blank())",
        "> ",
        "",
        "> ",
        "library(gtable)",
        "> ",
        "",
        "> ",
        "g1 <- ggplotGrob(p1)",
        "> ",
        "g2 <- ggplotGrob(p2)",
        "> ",
        "g <- rbind(g1, g2, size = \"first\")",
        "> ",
        "g$widths <- grid::unit.pmax(g1$widths, g2$widths)",
        "> ",
        "grid::grid.newpage()",
        "> ",
        "grid::grid.draw(g)",
        "> ",
        "",
        "\nRestarting R session...\n\n"
    ]
}